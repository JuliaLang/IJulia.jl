name: Run tests

on:
  push:
    branches: [master]
    tags: [v*]
  pull_request:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    env:
      JULIA_CONDAPKG_BACKEND: System
    strategy:
      matrix:
        julia-version: ['1.10', '1']
        arch: [x64]
        os: [ubuntu-latest, windows-latest, macOS-13]
        include:
          - os: macOS-latest
            arch: aarch64
            julia-version: '1'
          - os: ubuntu-latest
            arch: x86
            julia-version: '1'

    steps:
      - uses: actions/checkout@v4
      # We install micromamba ourselves because CondaPkg can't install it on 32 bit
      - uses: mamba-org/setup-micromamba@v2
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.julia-version }}
          arch: ${{ matrix.arch }}

      - uses: julia-actions/cache@v2

      # Installing Python on x86 is difficult and IJulia otherwise won't
      # precompile, so we just remove PythonCall from the test deps so that the
      # extension will never be built.
      - name: Remove PythonCall on x86
        if: matrix.arch == 'x86'
        run: julia --project=test -e 'using Pkg; Pkg.rm("PythonCall")'

      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1

      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v5
        with:
          files: lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
